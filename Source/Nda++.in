#!@CPP2PY_PYTHON_EXECUTABLE@

cxxflags = "@CMAKE_CXXFLAGS@ @nda_c_CXXFLAGS@"
ldflags = "@nda_c_LDFLAGS@ -L@CMAKE_INSTALL_PREFIX@/lib -lnda_c -lh5_c -lcpp2py"

import argparse, os
parser = argparse.ArgumentParser(description="""
A compiler-wrapper for the NDA library
""")
parser.add_argument('-show', action='store_true', help="Output the compiler and linktime flags")
parser.add_argument('-ldflags', action='store_true', help="Output the compiler flags")
parser.add_argument('-cxxflags', action='store_true', help="Output the linktime flags")
args, additional_args = parser.parse_known_args()

if args.show: 
    assert not args.ldflags and not args.cxxflags, "Please choose either -show, -ldflags or -cxxflags"
    print("CXXFLAGS=\"%s\""%(cxxflags))
    print("LDFLAGS=\"%s\""%(ldflags))
elif args.ldflags:
    assert not args.cxxflags, "Please choose either -show, -ldflags or -cxxflags"
    print(ldflags)
elif args.cxxflags:
    print(cxxflags)
else:
    compile_command = "@CMAKE_CXX_COMPILER@ -Wno-unused-command-line-argument %s %s %s"%(" ".join(additional_args), cxxflags, ldflags)
    os.system(compile_command)
